import java.util.*;
class randgen extends Thread
{
	protected static int n;
	Random r;
	public void run()
	{
		int i=0;
		while(i<10)
		{
			r=new Random();
			n=r.nextInt(10);
			i++;
			System.out.println("Number generated by "+Thread.currentThread()+"is"+n);
			//multiThread.t2.interrupt();
			try {
				Thread.sleep(900);
			}
			catch(InterruptedException ie)
			{
				ie.printStackTrace();
			}
		}
	}
}
 class square extends Thread
{
	public void run()
	{
		int i=0;
		System.out.println("Output from"+Thread.currentThread()+"is:");
		while(i<10)
		{
			System.out.println(randgen.n * randgen.n);
			
			try {
				Thread.sleep(900);
			}
			catch(InterruptedException ie)
			{
				ie.printStackTrace();
			}
			i++;
		}
	}
}
class cube extends Thread
{
	public void run()
	{
		int i=0;
		System.out.println("Output from"+Thread.currentThread()+"is:");
		while(i<10)
		{
			System.out.println(randgen.n * randgen.n * randgen.n);
			
			try {
				Thread.sleep(900);
			}
			catch(InterruptedException ie)
			{
				ie.printStackTrace();
			}
			i++;
		}
	}
}
public class multiThread {

	public static void main(String[] args) {
		// TODO Auto-generated method stub
		Thread t1 =new randgen();
		Thread t2=new square();
		Thread t3=new cube();
		t1.setPriority(Thread.MAX_PRIORITY);
		t3.setPriority(Thread.MIN_PRIORITY);
		t1.start();
		t2.start();
		t3.start();
	}

}
